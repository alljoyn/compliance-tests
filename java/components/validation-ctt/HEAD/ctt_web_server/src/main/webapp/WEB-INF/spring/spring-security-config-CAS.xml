<?xml version="1.0"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
 	
 	<http disable-url-rewriting="true" use-expressions="true" auto-config="false" request-matcher="ant" entry-point-ref="casEntryPoint">
 		<custom-filter before="CAS_FILTER" ref="casSingleSignOutFilter"/>
 		<custom-filter before="LOGOUT_FILTER" ref="requestSingleLogoutFilter" />
 		<custom-filter after="CAS_FILTER" ref="casFilter"/>
		<intercept-url pattern="/home*" access="permitAll"/>
		<intercept-url pattern="/home/**" access="permitAll"/>
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/resources/**" access="permitAll"/>
		<intercept-url pattern="/admin*" access="hasAnyRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

		<access-denied-handler ref="myAccessDeniedHandler"/>
		
		<logout logout-success-url="/home?logout"/>
	</http>
	
	<!-- Custom Access Denied Handler -->
	<b:bean id="myAccessDeniedHandler" class="com.at4wireless.security.CustomAccessDeniedHandler" />
	
 	<!-- Which application am I authenticating -->
	<b:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties"
		p:service="https://192.168.110.50:8443/TestToolWebApp/login/cas" p:sendRenew="false" />
	
	<!-- Where do I go when I need authentication -->
	<b:bean id="casEntryPoint"
		class="org.springframework.security.cas.web.CasAuthenticationEntryPoint"
		p:loginUrl="https://identity.linuxfoundation.org/cas/login" p:serviceProperties-ref="serviceProperties" />
	
	<b:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>
	<!-- This filter handles a Single Logout Request from the CAS Server -->
	<b:bean id="casSingleSignOutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
	<b:bean id="casFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter"
		p:authenticationManager-ref="casAuthenticationManager" />
	
	<authentication-manager id="casAuthenticationManager">
		<authentication-provider ref="casAuthenticationProvider"/>
	</authentication-manager>
	
	<b:bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider"
		p:serviceProperties-ref="serviceProperties" p:key="casAuthProviderKey">
		<b:property name="authenticationUserDetailsService">
			<b:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<b:constructor-arg ref="userService"/>
			</b:bean>
		</b:property>
		<b:property name="ticketValidator">
			<b:bean class="com.at4wireless.security.CustomCas20ServiceTicketValidator">
				<b:constructor-arg index="0" value="https://identity.linuxfoundation.org/cas/serviceValidate"/>
			</b:bean>
		</b:property>
	</b:bean>
	
	<!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
	<b:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter"
		p:filterProcessesUrl="/logout/cas">
	    <b:constructor-arg value="https://identity.linuxfoundation.org/cas/logout"/>
	    <b:constructor-arg>
	        <b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	    </b:constructor-arg>
	</b:bean>
	
	<!-- Security provider -->
	<jdbc-user-service id="userService" data-source-ref="dataSource"
		  		users-by-username-query=
		  			"select username, password, enabled from users where username=?"
		  		authorities-by-username-query=
		  			"select username, role from user_roles where username=?"/>
</b:beans>